<?php
//AMMDreader ver 2.0
//–ü–û–õ–ù–û–ï –ù–ê–ó–í–ê–ù–ò–ï
$ammdr = 'AMMDreader ver 2.0 - aMagic Markdown Reader';
//–ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ
$ammdr_short = 'AMMDr 2.0';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –ø–æ–∏—Å–∫–∞ .md —Ñ–∞–π–ª–æ–≤
//ver. 2.0
function scanDirectory($dir) {
    $result = [];
    $files = scandir($dir);
    
    foreach ($files as $file) {
        if ($file === '.' || $file === '..') continue;
        
        $path = $dir . DIRECTORY_SEPARATOR . $file;
        
        if (is_dir($path)) {
            $subResult = scanDirectory($path);
            if (!empty($subResult)) {
                $result = array_merge($result, $subResult);
            }
        } elseif (pathinfo($path, PATHINFO_EXTENSION) === 'md') {
            $result[] = $path;
        }
    }
    
    return $result;
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –ø–æ–∏—Å–∫–∞ .md —Ñ–∞–π–ª–æ–≤
//ver. 2.0 –≤ 1.0 –µ–µ –Ω–µ—Ç
function getMarkdownFiles() {
    $cacheFile = 'ammdr-files.php';
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å GET-–ø–∞—Ä–∞–º–µ—Ç—Ä scan=1, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à
    if (isset($_GET['scan']) && $_GET['scan'] == 1) {
        $mdFiles = scanDirectory(__DIR__);
        file_put_contents($cacheFile, implode("\n", $mdFiles));
        return $mdFiles;
    }
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª –∫–µ—à–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á–∏—Ç–∞–µ–º –∏–∑ –Ω–µ–≥–æ
    if (file_exists($cacheFile)) {
        $content = file_get_contents($cacheFile);
        return explode("\n", trim($content));
    }
    
    // –ï—Å–ª–∏ –∫–µ—à–∞ –Ω–µ—Ç –∏ –Ω–µ –±—ã–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    $mdFiles = scanDirectory(__DIR__);
    file_put_contents($cacheFile, implode("\n", $mdFiles));
    return $mdFiles;
}


//ver 1.0
/*
function scanDirectory($dir) {
    $result = [];
    $files = scandir($dir);
    
    foreach ($files as $file) {
        if ($file === '.' || $file === '..') continue;
        
        $path = $dir . DIRECTORY_SEPARATOR . $file;
        
        if (is_dir($path)) {
            $result[$file] = scanDirectory($path);
        } elseif (pathinfo($path, PATHINFO_EXTENSION) === 'md') {
            $result[] = $file;
        }
    }
    
    return $result;
}
*/

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML-–º–µ–Ω—é –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
//ver 1.0
/*
function generateMenu($structure, $basePath = '') {
    $html = '<ul class="nav-menu">';
    
    foreach ($structure as $key => $item) {
        if (is_array($item)) {
            // –≠—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
            $html .= '<li class="folder">';
            $html .= '<span class="folder-name">' . htmlspecialchars($key) . '</span>';
            $html .= generateMenu($item, $basePath . $key . '/');
            $html .= '</li>';
        } else {
            // –≠—Ç–æ —Ñ–∞–π–ª
            $fileName = pathinfo($item, PATHINFO_FILENAME);
            $filePath = $basePath . $item;
            $html .= '<li class="file">';
            $html .= '<a href="#" data-md="' . htmlspecialchars($filePath) . '">' . htmlspecialchars($fileName) . '</a>';
            $html .= '</li>';
        }
    }
    
    $html .= '</ul>';
    return $html;
}
*/
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML-–º–µ–Ω—é –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
//ver. 2.0
function generateMenu($markdownFiles) {
    $scriptDir = __DIR__ . DIRECTORY_SEPARATOR;
    $menuItems = [];
    
    // –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    foreach ($markdownFiles as $fullPath) {
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
        $relativePath = str_replace($scriptDir, '', $fullPath);
        
        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
        $parts = explode(DIRECTORY_SEPARATOR, $relativePath);
        $fileName = array_pop($parts); // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω–µ—á–Ω—É—é –ø–∞–ø–∫—É (–∏–ª–∏ 'AMMDreader' –¥–ª—è –∫–æ—Ä–Ω—è)
        $folder = !empty($parts) ? end($parts) : '';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (!isset($menuItems[$folder])) {
            $menuItems[$folder] = [];
        }
        $menuItems[$folder][] = [
            'name' => pathinfo($fileName, PATHINFO_FILENAME),
            'path' => $relativePath
        ];
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –º–µ–Ω—é
    $html = '<ul class="nav-menu">';
    foreach ($menuItems as $folder => $files) {
        $html .= '<li class="folder">';
        $html .= '<span class="folder-name">' . htmlspecialchars($folder) . '</span>';
        $html .= '<ul class="file-list">';
        
        foreach ($files as $file) {
            $html .= '<li class="file">';
            $html .= '<a href="#" data-md="' . htmlspecialchars($file['path']) . '" title="' . htmlspecialchars($file['path']) . '">';
            $html .= htmlspecialchars($file['name']);
            $html .= '</a>';
            $html .= '</li>';
        }
        
        $html .= '</ul>';
        $html .= '</li>';
    }
    $html .= '</ul>';
    
    return $html;
}

// –°–∫–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
//ver. 2.0
$structure = getMarkdownFiles('.');
//ver. 1.0
//$structure = scanDirectory('.');
$menuHtml = generateMenu($structure);

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É
header('Content-Type: text/html; charset=utf-8');
echo <<<HTML
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Markdown Documentation</title>
    <!--link rel="stylesheet" href="ammdr.css"-->
    <script type="module" src="https://cdn.jsdelivr.net/gh/zerodevx/zero-md@2/dist/zero-md.min.js"></script>
<style>
 /* ==================== */
/* –ë–ê–ó–û–í–´–ï –°–¢–ò–õ–ò */
/* ==================== */

/**
 * –°–±—Ä–æ—Å —Å—Ç–∏–ª–µ–π –∏ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç box-model, —à—Ä–∏—Ñ—Ç—ã –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞
 */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, 
                sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */
body {
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-template-columns: 300px 1fr;
    grid-template-areas: 
        "header header"
        "nav main"
        "footer footer";
    min-height: 100vh;
    color: #24292e;
    line-height: 1.5;
    overflow: hidden;
}

/* ==================== */
/* –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ú–ê–ö–ï–¢–ê */
/* ==================== */

/* –®–∞–ø–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */
header {
    grid-area: header;
    background: #f8f9fa;
    padding: 1rem;
    border-bottom: 1px solid #e1e4e8;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

/* –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (–ª–µ–≤–∞—è –ø–∞–Ω–µ–ª—å) */
nav {
    grid-area: nav;
    background: #f8f9fa;
    padding: 1.5rem;
    border-right: 1px solid #e1e4e8;
    overflow-y: auto;
    height: calc(100vh - 120px);
    scrollbar-width: thin;
    scrollbar-color: #c1c1c1 #f1f1f1;
}

/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */
main {
    grid-area: main;
    padding: 2rem;
    overflow-y: auto;
    height: calc(100vh - 120px);
    scrollbar-width: thin;
    scrollbar-color: #0366d6 #f1f1f1;
    background-color: #fff;
}

/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —à–∏—Ä–∏–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
.content-wrapper {
    max-width: 800px;
    margin: 0 auto;
    width: 100%;
}

/* –ü–æ–¥–≤–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞ */
footer {
    grid-area: footer;
    background: #f8f9fa;
    padding: 1rem;
    border-top: 1px solid #e1e4e8;
    text-align: center;
    font-size: 0.9rem;
    color: #6c757d;
}

/* ==================== */
/* –≠–õ–ï–ú–ï–ù–¢–´ –ù–ê–í–ò–ì–ê–¶–ò–ò */
/* ==================== */

/* –°–ø–∏—Å–æ–∫ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
nav ul {
    list-style: none;
    padding-left: 1rem;
}

nav li {
    margin: 0.1rem 0;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –ø–∞–ø–æ–∫ */
.folder {
    margin-left: -0.5rem; /* –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –æ—Ç—Å—Ç—É–ø –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏ */
    padding-left: 0;
}

.folder-name {
    cursor: pointer;
    font-weight: 600;
    display: flex;
    align-items: flex-start;
    transition: all 0.2s ease;
    color: #24292e;
    border-radius: 4px;
    padding-left: 0.5rem;
    margin-left: -0.5rem;
}

.folder-name:hover {
    background-color: #e1e4e8;
}

/* –ò–∫–æ–Ω–∫–∞ –∑–∞–∫—Ä—ã—Ç–æ–π –ø–∞–ø–∫–∏ (–∑–µ–ª–µ–Ω—ã–π) */
.folder-name::before {
    content: "üìÅ ";
    color: #2ecc71;
}

/* –ò–∫–æ–Ω–∫–∞ –æ—Ç–∫—Ä—ã—Ç–æ–π –ø–∞–ø–∫–∏ (–∂–µ–ª—Ç—ã–π) */
.folder.expanded > .folder-name::before {
    content: "üìÇ ";
    color: #f39c12;
}

/* –í–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ –ø–∞–ø–∫–µ */
.folder > ul {
    display: none;
    margin-left: 0.5rem;
    padding-left: 0.5rem;
}

.folder.expanded > ul {
    display: block;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ */
.file {
    margin-left: -1rem; /* –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –æ—Ç—Å—Ç—É–ø –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏ */
    padding-left: 0;
}

.file a {
    position: relative;
    padding-left: 1.2rem;
    display: flex;
    align-items: flex-start;
    min-height: 1.5em;
    transition: all 0.2s ease;
    border-radius: 4px;
    color: inherit;
}

/* –ò–∫–æ–Ω–∫–∞ —Ñ–∞–π–ª–∞ (—Å–∏—Ä–µ–Ω–µ–≤–∞—è) */
.file a::before {
    content: "üìÑ";
    position: absolute;
    left: 0.2rem;
    top: 0.4em;
    font-size: 0.9em;
    line-height: 1;
    color: #ca2ecc;
    transition: color 0.2s ease;
}

/* –°–æ—Å—Ç–æ—è–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ñ–∞–π–ª–∞ */
.file a:hover::before,
.file a.active::before {
    color: #ff0000; /* –Ø—Ä–∫–æ-–∫—Ä–∞—Å–Ω—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏/–∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */
}

.file a:hover {
    background-color: #e1e4e8;
}

/* –ê–∫—Ç–∏–≤–Ω—ã–π —Ñ–∞–π–ª */
.file a.active {
    color: #0366d6;
    font-weight: 500;
    background-color: #e1e4e8;
}

/* ==================== */
/* –°–°–´–õ–ö–ò */
/* ==================== */

a {
    color: #0366d6;
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

/* ==================== */
/* –°–ö–†–û–õ–õ–ë–ê–†–´ */
/* ==================== */

/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */
nav::-webkit-scrollbar {
    width: 8px;
}
nav::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}
nav::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
}
nav::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}

/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */
main::-webkit-scrollbar {
    width: 10px;
}
main::-webkit-scrollbar-track {
    background: #f1f1f1;
}
main::-webkit-scrollbar-thumb {
    background: #0366d6;
    border-radius: 5px;
}
main::-webkit-scrollbar-thumb:hover {
    background: #0252b3;
}

/* ==================== */
/* –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ò–ù–¢–ï–†–§–ï–ô–°–ê */
/* ==================== */

/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
.loading {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 12px 24px;
    border-radius: 6px;
    display: none;
    z-index: 1000;
    font-size: 0.9rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% { opacity: 0.8; }
    50% { opacity: 1; }
    100% { opacity: 0.8; }
}

/* ==================== */
/* –°–¢–ò–õ–ò –î–õ–Ø MARKDOWN (zero-md) */
/* ==================== */

zero-md {
    width: 100%;
    min-height: 100%;
    background: white;
    border-radius: 6px;
    padding: 1px; /* –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–Ω–µ–π */
}

/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
zero-md h1, 
zero-md h2, 
zero-md h3 {
    scroll-margin-top: 20px; /* –û—Ç—Å—Ç—É–ø –¥–ª—è —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ */
}

/* –ë–ª–æ–∫–∏ –∫–æ–¥–∞ */
zero-md pre {
    border-radius: 6px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

zero-md code {
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
    font-size: 0.9em;
}

/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é - –∏–∫–æ–Ω–∫–∞ "–≥–∞–º–±—É—Ä–≥–µ—Ä" */
.mobile-menu-btn {
	display: none;
	position: absolute;
	right: 1rem;
	top: 1rem;
	width: 30px;
	height: 24px;
	cursor: pointer;
	z-index: 1001;
}

.mobile-menu-btn span {
	display: block;
	width: 100%;
	height: 3px;
	background: #0366d6;
	margin-bottom: 5px;
	transition: all 0.3s ease;
}

.mobile-menu-btn.active span:nth-child(1) {
	transform: rotate(45deg) translate(5px, 5px);
}

.mobile-menu-btn.active span:nth-child(2) {
	opacity: 0;
}

.mobile-menu-btn.active span:nth-child(3) {
	transform: rotate(-45deg) translate(7px, -7px);
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
@media (max-width: 600px) {
body {
	grid-template-columns: 1fr;
	grid-template-areas: 
		"header"
		"main"
		"footer";
}

.full-title { display: none; }
.short-title { display: inline; }

nav {
	position: fixed;
	top: 0;
	left: -300px;
	width: 280px;
	height: 100vh;
	z-index: 1000;
	transition: left 0.3s ease;
	box-shadow: 2px 0 5px rgba(0,0,0,0.1);
}

nav.active {
	left: 0;
}

.mobile-menu-btn {
	display: block;
}

main {
	padding: 1rem;
}
}

@media (min-width: 601px) {
.full-title { display: inline; }
.short-title { display: none; }
}       
</style>
</head>
<body>
    <header>
        <h1><span class="full-title">{$ammdr}</span><span class="short-title">{$ammdr_short}</span></h1>
        <div class="mobile-menu-btn">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </header>
    
    <nav id="main-nav">
        {$menuHtml}
    </nav>
    
    <main>
        <div class="content-wrapper">
HTML;

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if (isset($_GET['md'])) {
    $safeFile = basename($_GET['md']);
    if (pathinfo($safeFile, PATHINFO_EXTENSION) === 'md') {
        echo "<zero-md src='$safeFile'></zero-md>";
    }
} else {
    echo '<h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>';
    echo '<p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞.</p>';
}

echo <<<HTML
        </div>
    </main>
    
    <footer>
        <p>Generated with PHP Markdown Navigation</p>
    </footer>
    
    <!--div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div-->
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º –≤ –º–µ–Ω—é
            $('nav').on('click', 'a[data-md]', function(e) {
                e.preventDefault();
                var mdFile = $(this).data('md');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                $('.loading').fadeIn();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —ç–ª–µ–º–µ–Ω—Ç zero-md
                var zeroMdElement = $('zero-md');
                
                if (zeroMdElement.length === 0) {
                    // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
                    $('.content-wrapper').html('<zero-md src="' + mdFile + '"></zero-md>');
                } else {
                    // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º src
                    zeroMdElement.attr('src', mdFile);
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                history.pushState(null, null, '?md=' + encodeURIComponent(mdFile));
                
                // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
                if ($(window).width() <= 600) {
                    $('#main-nav').removeClass('active');
                    $('.mobile-menu-btn').removeClass('active');
                }
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                $('.loading').fadeOut();
            });
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥" –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            window.onpopstate = function(event) {
                if (location.search.includes('md=')) {
                    var mdFile = location.search.split('md=')[1].split('&')[0];
                    $('a[data-md="' + decodeURIComponent(mdFile) + '"]').click();
                } else {
                    $('.content-wrapper').html('<h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1><p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞.</p>');
                }
            };
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –¥–ª—è –ø–∞–ø–æ–∫
            $('.folder-name').on('click', function() {
                $(this).parent().toggleClass('expanded');
            });
            
            // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –≤ –Ω–µ–π –≤—ã–±—Ä–∞–Ω —Ç–µ–∫—É—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç
            if (location.search.includes('md=')) {
                var mdFile = location.search.split('md=')[1].split('&')[0];
                $('a[data-md="' + decodeURIComponent(mdFile) + '"]').each(function() {
                    $(this).parents('.folder').addClass('expanded');
                });
            }
            
            // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
            $('.mobile-menu-btn').click(function() {
                $(this).toggleClass('active');
                $('#main-nav').toggleClass('active');
            });
            
            // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–∞–π–ª
            $('.file a').click(function() {
                // –£–¥–∞–ª—è–µ–º active —É –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
                $('.file a').removeClass('active');
                // –î–æ–±–∞–≤–ª—è–µ–º active –∫ —Ç–µ–∫—É—â–µ–º—É
                $(this).addClass('active');
            });
        });
    </script>
</body>
</html>
HTML;